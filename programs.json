[ {
  "name" : "Family planning",
  "uuid" : "a2cb2d14-ea4d-416a-a432-29a14435714c",
  "colour" : "#0039ff",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  const moment = imports.moment;\n  let eligibility = true;\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({individual}).when.gender.equals(\"Male\").and.when.ageInYears.greaterThanOrEqualTo(21).matches();\n  \n  const condition21 = new imports.rulesConfig.RuleCondition({individual}).when.gender.equals(\"Female\").and.when.ageInYears.greaterThanOrEqualTo(18).matches();\n  \n  eligibility = condition11 || condition21 ;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n  \n  if ( individualsStatus &&individualsStatus[0] === 'Dead') return false;\n  \n  return eligibility;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Acute Encephalitis",
  "uuid" : "ededfa37-808d-44ae-a564-d80eb64130ff",
  "colour" : "#a38c24",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "//SAMPLE RULE EXAMPLE\n'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n  \n  if (individualsStatus && individualsStatus[0] === 'Dead') return false;\n  else return true;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Leprosy",
  "uuid" : "c81d7646-0c53-4f34-930b-758a0cd7191d",
  "colour" : "#24ab75",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "//SAMPLE RULE EXAMPLE\n'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n  \n  if (individualsStatus && individualsStatus[0] === 'Dead') return false;\n  else return true;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Tuberculosis",
  "uuid" : "a6f8de33-06d4-4261-bb49-3e11f53de469",
  "colour" : "#abb91d",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "//SAMPLE RULE EXAMPLE\n'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n  \n  if (individualsStatus && individualsStatus[0] === 'Dead') return false;\n  else return true;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Malaria",
  "uuid" : "100e7256-6259-497f-86f1-19922f2926bf",
  "colour" : "#f14e30",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "//SAMPLE RULE EXAMPLE\n'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n//  console.log('individualsStatus=======',individualsStatus);\n  \n  if (individualsStatus && individualsStatus[0] === 'Dead') return false;\n  else return true;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Kala Azar",
  "uuid" : "b16fd410-5d6a-4c92-b415-6da24988bc46",
  "colour" : "#696363",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "//SAMPLE RULE EXAMPLE\n'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n  \n  if (individualsStatus && individualsStatus[0] === 'Dead') return false;\n  else return true;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Filaria",
  "uuid" : "e57427aa-89a8-4b34-b6fd-6841124d8172",
  "colour" : "#1e9c71",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "//SAMPLE RULE EXAMPLE\n'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n  \n  if (individualsStatus && individualsStatus[0] === 'Dead') return false;\n  else return true;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Pregnancy",
  "uuid" : "2e3b2ff5-6512-4931-a827-4d269ae31af8",
  "colour" : "#d623ea",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  const moment = imports.moment;\n  let eligibility = true;\n  \n  const condition11 = new imports.rulesConfig.RuleCondition({individual}).when.valueInRegistration(\"4bc133a4-0545-4e8c-9aba-0ee72c28f3f8\").containsAnswerConceptName(\"df6c5df0-f3ce-4d9a-be43-240b137b2934\").matches();\n  \n  console.log('==========================================');\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n // console.log('individualsStatus---1111--->',individualsStatus);\n//  console.log('individualsStatus---2222--->',individualsStatus.getValue());\n    \n  if ( individualsStatus &&individualsStatus[0] === 'Dead') return false;\n  \n  eligibility = condition11 ;\n  \n  return individual.isFemale() && individual.getAgeInYears() >= 18 && individual.getAgeInYears() <= 49 && eligibility;\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : "",
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
}, {
  "name" : "Child",
  "uuid" : "0ec7a642-5357-4410-b2f9-debaf5f72c05",
  "colour" : "#bf6fe0",
  "voided" : false,
  "active" : null,
  "enrolmentEligibilityCheckRule" : "'use strict';\n({params, imports}) => {\n  const individual = params.entity;\n  \n  const individualsStatus = individual.getObservationReadableValue('34b441a2-d19b-415e-a6aa-2ed612af7f0d');\n\n  if ( individualsStatus &&individualsStatus[0] === 'Dead') return false;\n  \n  const childDeathReview = individual.hasEncounterOfType('Child death review');\n  if (childDeathReview) return false;\n  \n  if ( individual.getAgeInYears() < 15 ) return true;\n\n};",
  "enrolmentSummaryRule" : "",
  "enrolmentEligibilityCheckDeclarativeRule" : null,
  "manualEligibilityCheckRequired" : false,
  "manualEnrolmentEligibilityCheckRule" : null,
  "manualEnrolmentEligibilityCheckDeclarativeRule" : null,
  "allowMultipleEnrolments" : false
} ]